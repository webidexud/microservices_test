pipeline {
    agent any
    stages {
        stage('Preparar Entorno') {
            steps {
                script {
                    if (fileExists('Siexud_V2_2025')) {
                        dir('Siexud_V2_2025') { sh 'git pull origin master' }
                    } else {
                        git branch: 'main', 
                        credentialsId: 'softwareGit', 
                        url: 'https://github.com/siexud/Siexud_V2_2025.git'
                    }
                }
            }
        }

        stage('Inicializar Terraform') {
            steps { dir('IaC') { sh 'terraform init -upgrade -input=false' } }
        }

        stage('Verificar y Gestionar Red Docker') {
            steps{
                dir('IaC'){
                    sh 'terraform state rm docker_network.gaterway_Network'
                    sh 'terraform import docker_network.gaterway_Network 72156584f5be12e63f310ff0a6abb8f486c7328c4b4c0823f852da69a5b6eecc'
                }
            }
        }

        stage('Planificar Infraestructura') {
            steps {
                dir('IaC') {
                    sh 'terraform plan'
                }
            }
        }

        stage('Aplicar Cambios') {
            steps{
                dir('IaC'){
                    // sh 'terraform apply -auto-approve'
                    sh 'terraform taint docker_container.si_ofex'
                    sh 'terraform apply -replace="docker_image.gaterway_node" -auto-approve'
                }
            }
        }

        stage('Forzar Recreación (Opcional)') {
            when {
                expression { params.FORCE_REBUILD_NODE_IMAGE == true }
            }
            steps {
                dir('IaC') {
                    sh 'terraform apply -replace="docker_image.gaterway_node" -auto-approve'
                }
            }
        }
    }
    parameters {
        booleanParam(
            name: 'FORCE_REBUILD_NODE_IMAGE',
            defaultValue: false,
            description: 'Forzar recreación de la imagen Node'
        )
    }
}